{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding Stuff\\\\ElectronicWebsite\\\\elsite\\\\src\\\\components\\\\homePage.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\"; // This will require to npm install axios\n\nimport instance from \"./axios.js\";\nimport { Link } from \"react-router-dom\";\nimport dark_background from \"./icons/black-circuit.png\";\nimport light_background from \"./icons/light_circuit.jpg\";\nimport \"./homePage.css\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { alignPropType } from \"react-bootstrap/esm/DropdownMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  // This is the constructor that shall store our data retrieved from the database\n  // const [records, setRecords] = useState([]);\n  const initialFormData = Object.freeze({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [formData, updateFormData] = useState(initialFormData);\n\n  const handleChange = e => {\n    updateFormData({ ...formData,\n      [e.target.name]: e.target.value.trim()\n    });\n  }; // This method will get the data from the database.\n  // useEffect(() => {\n  //     axios\n  //         .get(\"http://localhost:7000/signup\")\n  //         .then((response) => {\n  //             this.setState({ records: response.data });\n  //         })\n  //         .catch(function (error) {\n  //             console.log(error);\n  //         });\n  // }, []);\n  // This method will delete a record based on the method\n  // const deleteRecord = (id) => {\n  //     axios.delete(\"http://localhost:7000/\" + id).then((response) => {\n  //         console.log(response.data);\n  //     });\n  //     this.setState({\n  //         record: this.state.records.filter((el) => el._id !== id),\n  //     });\n  // };\n\n\n  const handleSignup = async e => {\n    e.preventDefault();\n    console.log(\"trying to signup\");\n    console.log(formData);\n\n    try {\n      await instance.post(\"/signup\", formData).then(res => {//console.log(\"axios instance for signing up\");\n        //console.log(res);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }; // This following section will display the table with the records of individuals.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"summary\",\n        children: \"A budget manager app to help manage budget!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        id: \"loginform\",\n        onSubmit: handleSignup,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"formelement\",\n          controlId: \"formName\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"name\",\n            required: true,\n            type: \"text\",\n            placeholder: \"Name\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"formelement\",\n          controlId: \"formBasicEmail\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"email\",\n            required: true,\n            type: \"email\",\n            placeholder: \"Email address\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"formelement\",\n          controlId: \"formBasicPassword\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Password\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"formelement\",\n          id: \"loginbtn\",\n          type: \"submit\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomePage, \"sLsBMhW6ukS/3GglcwD1ggIelKo=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Coding Stuff/ElectronicWebsite/elsite/src/components/homePage.js"],"names":["React","useState","useEffect","instance","Link","dark_background","light_background","Form","Button","alignPropType","HomePage","initialFormData","Object","freeze","name","email","password","formData","updateFormData","handleChange","e","target","value","trim","handleSignup","preventDefault","console","log","post","then","res","err"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\r\n// This will require to npm install axios\r\nimport instance from \"./axios.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dark_background from \"./icons/black-circuit.png\";\r\nimport light_background from \"./icons/light_circuit.jpg\";\r\nimport \"./homePage.css\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { alignPropType } from \"react-bootstrap/esm/DropdownMenu\";\r\n\r\nconst HomePage = () => {\r\n    // This is the constructor that shall store our data retrieved from the database\r\n    // const [records, setRecords] = useState([]);\r\n\r\n    const initialFormData = Object.freeze({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const [formData, updateFormData] = useState(initialFormData);\r\n\r\n    const handleChange = (e) => {\r\n        updateFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value.trim(),\r\n        });\r\n    };\r\n\r\n    // This method will get the data from the database.\r\n    // useEffect(() => {\r\n    //     axios\r\n    //         .get(\"http://localhost:7000/signup\")\r\n    //         .then((response) => {\r\n    //             this.setState({ records: response.data });\r\n    //         })\r\n    //         .catch(function (error) {\r\n    //             console.log(error);\r\n    //         });\r\n    // }, []);\r\n\r\n    // This method will delete a record based on the method\r\n    // const deleteRecord = (id) => {\r\n    //     axios.delete(\"http://localhost:7000/\" + id).then((response) => {\r\n    //         console.log(response.data);\r\n    //     });\r\n\r\n    //     this.setState({\r\n    //         record: this.state.records.filter((el) => el._id !== id),\r\n    //     });\r\n    // };\r\n\r\n    const handleSignup = async (e) => {\r\n        e.preventDefault();\r\n        console.log(\"trying to signup\");\r\n        console.log(formData);\r\n        try {\r\n            await instance.post(\"/signup\", formData).then((res) => {\r\n                //console.log(\"axios instance for signing up\");\r\n                //console.log(res);\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // This following section will display the table with the records of individuals.\r\n    return (\r\n        <div id=\"background\">\r\n            <div id=\"container\">\r\n                <h1 id=\"summary\">A budget manager app to help manage budget!</h1>\r\n                <Form id=\"loginform\" onSubmit={handleSignup}>\r\n                    <Form.Group className=\"formelement\" controlId=\"formName\">\r\n                        <Form.Control\r\n                            name=\"name\"\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Name\"\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"formelement\" controlId=\"formBasicEmail\">\r\n                        <Form.Control\r\n                            name=\"email\"\r\n                            required\r\n                            type=\"email\"\r\n                            placeholder=\"Email address\"\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"formelement\" controlId=\"formBasicPassword\">\r\n                        <Form.Control\r\n                            required\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Group>\r\n                    {/* <Form.Group className=\"formelement\" controlId=\"formBasicPassword\">\r\n                        <Form.Control required type=\"password\" placeholder=\"Confirm password\" />\r\n                    </Form.Group> */}\r\n                    <Button className=\"formelement\" id=\"loginbtn\" type=\"submit\">\r\n                        Sign in\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}