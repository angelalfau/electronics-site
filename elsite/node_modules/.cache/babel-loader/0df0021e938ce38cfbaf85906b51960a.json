{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding Stuff\\\\ElectronicWebsite\\\\elsite\\\\src\\\\components\\\\recordList.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\"; // This will require to npm install axios\n\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport background from \"./icons/black-circuit.png\";\nimport \"./recordList.css\";\nimport darkMode from \"./darkMode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Record = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.person_name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.person_position\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.person_level\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/edit/\" + props.record._id,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), \" |\", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      onClick: () => {\n        props.deleteRecord(props.record._id);\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 5\n}, this);\n\n_c = Record;\n\nconst RecordList = () => {\n  _s();\n\n  // This is the constructor that shall store our data retrieved from the database\n  const [records, setRecords] = useState([]);\n  const [dark, setDark] = darkMode();\n  useEffect(() => {\n    setDark();\n    setDark();\n  }); // This method will get the data from the database.\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/record/\").then(response => {\n      this.setState({\n        records: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []); // This method will delete a record based on the method\n\n  const deleteRecord = id => {\n    axios.delete(\"http://localhost:5000/\" + id).then(response => {\n      console.log(response.data);\n    });\n    this.setState({\n      record: this.state.records.filter(el => el._id !== id)\n    });\n  }; // This method will map out the users on the table\n\n\n  const recordList = () => {\n    return this.state.records.map(currentrecord => {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        record: currentrecord,\n        deleteRecord: this.deleteRecord\n      }, currentrecord._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this);\n    });\n  }; // This following section will display the table with the records of individuals.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: dark ? {\n      backgroundImage: `url(${background})`\n    } : {},\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Record List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: records\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecordList, \"LpshLvHg5NC5hhMuRaCCMMjaNIk=\");\n\n_c2 = RecordList;\nexport default RecordList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Record\");\n$RefreshReg$(_c2, \"RecordList\");","map":{"version":3,"sources":["C:/Coding Stuff/ElectronicWebsite/elsite/src/components/recordList.js"],"names":["React","useState","useEffect","axios","Link","background","darkMode","Record","props","record","person_name","person_position","person_level","_id","deleteRecord","RecordList","records","setRecords","dark","setDark","get","then","response","setState","data","catch","error","console","log","id","delete","state","filter","el","recordList","map","currentrecord","backgroundImage","marginTop"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\r\n// This will require to npm install axios\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport background from \"./icons/black-circuit.png\";\r\nimport \"./recordList.css\";\r\nimport darkMode from \"./darkMode\";\r\n\r\nconst Record = (props) => (\r\n    <tr>\r\n        <td>{props.record.person_name}</td>\r\n        <td>{props.record.person_position}</td>\r\n        <td>{props.record.person_level}</td>\r\n        <td>\r\n            <Link to={\"/edit/\" + props.record._id}>Edit</Link> |\r\n            <a\r\n                href=\"/\"\r\n                onClick={() => {\r\n                    props.deleteRecord(props.record._id);\r\n                }}\r\n            >\r\n                Delete\r\n            </a>\r\n        </td>\r\n    </tr>\r\n);\r\n\r\nconst RecordList = () => {\r\n    // This is the constructor that shall store our data retrieved from the database\r\n    const [records, setRecords] = useState([]);\r\n    const [dark, setDark] = darkMode();\r\n\r\n    useEffect(() => {\r\n        setDark();\r\n        setDark();\r\n    });\r\n    // This method will get the data from the database.\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"http://localhost:5000/record/\")\r\n            .then((response) => {\r\n                this.setState({ records: response.data });\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }, []);\r\n\r\n    // This method will delete a record based on the method\r\n    const deleteRecord = (id) => {\r\n        axios.delete(\"http://localhost:5000/\" + id).then((response) => {\r\n            console.log(response.data);\r\n        });\r\n\r\n        this.setState({\r\n            record: this.state.records.filter((el) => el._id !== id),\r\n        });\r\n    };\r\n\r\n    // This method will map out the users on the table\r\n    const recordList = () => {\r\n        return this.state.records.map((currentrecord) => {\r\n            return (\r\n                <Record\r\n                    record={currentrecord}\r\n                    deleteRecord={this.deleteRecord}\r\n                    key={currentrecord._id}\r\n                />\r\n            );\r\n        });\r\n    };\r\n\r\n    // This following section will display the table with the records of individuals.\r\n    return (\r\n        <div style={dark ? { backgroundImage: `url(${background})` } : {}}>\r\n            <h3>Record List</h3>\r\n            <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Position</th>\r\n                        <th>Level</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{records}</tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecordList;\r\n"]},"metadata":{},"sourceType":"module"}