{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding Stuff\\\\ElectronicWebsite\\\\elsite\\\\src\\\\components\\\\transactionPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./transactionPage.css\";\nimport instance from \"./axios.js\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transaction = ({\n  account\n}) => {\n  // console.log(account);\n  var formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\" // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\n  });\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: account === null || account === void 0 ? void 0 : account.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: account === null || account === void 0 ? void 0 : account.subtype\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: formatter.format(account === null || account === void 0 ? void 0 : account.balances.current)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Transaction;\n\nconst TransactionPage = () => {\n  _s();\n\n  const [page, setPage] = useState(0);\n  const [mainAcc, setMainAcc] = useState({\n    accounts: []\n  });\n  const [loading, setLoading] = useState(true);\n\n  const renderAccounts = async () => {\n    try {\n      await instance.post(\"/balance\", {\n        access_token: \"access-sandbox-4acad0a3-4e55-4ecc-8a16-8114123c22c4\"\n      }).then(res => {\n        // console.log(res);\n        setMainAcc({\n          accounts: res.data.accounts\n        }); // console.log(\"acc2\");\n        // console.log(mainAcc);\n\n        setLoading(false);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    renderAccounts(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const transactionList = page => {\n    var _mainAcc$accounts;\n\n    // console.log(\"acc\");\n    // console.log(mainAcc.accounts);\n    return (_mainAcc$accounts = mainAcc.accounts) === null || _mainAcc$accounts === void 0 ? void 0 : _mainAcc$accounts.map((currentAccount, i) => {\n      // console.log(\"curr Acc\");\n      // console.log(currentAccount);\n      return /*#__PURE__*/_jsxDEV(Transaction, {\n        account: currentAccount\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 20\n      }, this); // console.log(\"?\");\n      // return <h1>hello</h1>;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"transactionbackground\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"transactioncontainer\",\n      class: \"tbl-header\",\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Currently Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        cellPadding: \"0\",\n        cellSpacing: \"0\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"tbl-header\",\n          cellPadding: \"0\",\n          cellSpacing: \"0\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Institution Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Account Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"tbl-content\",\n          cellPadding: \"0\",\n          cellSpacing: \"0\",\n          children: transactionList()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"endsection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TransactionPage, \"JE/XWCq1BXvthe1KrM6b3jOHaIs=\");\n\n_c2 = TransactionPage;\nexport default TransactionPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Transaction\");\n$RefreshReg$(_c2, \"TransactionPage\");","map":{"version":3,"sources":["C:/Coding Stuff/ElectronicWebsite/elsite/src/components/transactionPage.js"],"names":["React","instance","useEffect","useState","Transaction","account","formatter","Intl","NumberFormat","style","currency","name","subtype","format","balances","current","TransactionPage","page","setPage","mainAcc","setMainAcc","accounts","loading","setLoading","renderAccounts","post","access_token","then","res","data","err","console","log","transactionList","map","currentAccount","i"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./transactionPage.css\";\r\nimport instance from \"./axios.js\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Transaction = ({ account }) => {\r\n    // console.log(account);\r\n    var formatter = new Intl.NumberFormat(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n\r\n        // These options are needed to round to whole numbers if that's what you want.\r\n        //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\r\n        //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\r\n    });\r\n\r\n    return (\r\n        <tr>\r\n            <td>{account?.name}</td>\r\n            <td>{account?.subtype}</td>\r\n            <td>{formatter.format(account?.balances.current)}</td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nconst TransactionPage = () => {\r\n    const [page, setPage] = useState(0);\r\n    const [mainAcc, setMainAcc] = useState({ accounts: [] });\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const renderAccounts = async () => {\r\n        try {\r\n            await instance\r\n                .post(\"/balance\", {\r\n                    access_token: \"access-sandbox-4acad0a3-4e55-4ecc-8a16-8114123c22c4\",\r\n                })\r\n                .then((res) => {\r\n                    // console.log(res);\r\n\r\n                    setMainAcc({ accounts: res.data.accounts });\r\n                    // console.log(\"acc2\");\r\n                    // console.log(mainAcc);\r\n                    setLoading(false);\r\n                });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        renderAccounts();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const transactionList = (page) => {\r\n        // console.log(\"acc\");\r\n        // console.log(mainAcc.accounts);\r\n        return mainAcc.accounts?.map((currentAccount, i) => {\r\n            // console.log(\"curr Acc\");\r\n            // console.log(currentAccount);\r\n\r\n            return <Transaction key={i} account={currentAccount} />;\r\n            // console.log(\"?\");\r\n            // return <h1>hello</h1>;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div id=\"transactionbackground\">\r\n            <div id=\"transactioncontainer\" class=\"tbl-header\">\r\n                {loading ? (\r\n                    <p>Currently Loading...</p>\r\n                ) : (\r\n                    <table cellPadding=\"0\" cellSpacing=\"0\">\r\n                        <thead className=\"tbl-header\" cellPadding=\"0\" cellSpacing=\"0\">\r\n                            <tr>\r\n                                <th>Institution Name</th>\r\n                                <th>Account Type</th>\r\n                                <th>Balance</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"tbl-content\" cellPadding=\"0\" cellSpacing=\"0\">\r\n                            {transactionList()}\r\n                        </tbody>\r\n                    </table>\r\n                )}\r\n                <div id=\"endsection\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TransactionPage;\r\n"]},"metadata":{},"sourceType":"module"}