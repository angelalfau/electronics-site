{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding Stuff\\\\ElectronicWebsite\\\\elsite\\\\src\\\\components\\\\transactionPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./transactionPage.css\";\nimport instance from \"./axios.js\";\nimport { useEffect, useState } from \"react\";\nimport Table from \"./Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transaction = account => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: account.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: account.subtype\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: account.balance.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Transaction;\n\nconst TransactionPage = () => {\n  _s();\n\n  const [page, setPage] = useState(0);\n  const [mainAcc, setMainAcc] = useState({\n    accounts: []\n  }); // var mainAcc = {};\n\n  const renderAccounts = async () => {\n    try {\n      await instance.post(\"/balance\", {\n        access_token: \"access-sandbox-4acad0a3-4e55-4ecc-8a16-8114123c22c4\"\n      }).then(res => {\n        console.log(res);\n        setMainAcc({\n          accounts: res.data.accounts\n        }); // mainAcc = { accounts: res.data };\n\n        console.log(\"acc2\");\n        console.log(mainAcc);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }; // useEffect(() => {\n  //     renderAccounts();\n  //     setPage(page + 1);\n  // }, []);\n\n\n  useEffect(() => {\n    const getData = async () => {\n      await instance.post(\"/balance\", {\n        access_token: \"access-sandbox-4acad0a3-4e55-4ecc-8a16-8114123c22c4\"\n      }).then(res => {\n        console.log(res);\n        setMainAcc({\n          accounts: res.data.accounts\n        }); // mainAcc = { accounts: res.data };\n\n        console.log(\"acc2\");\n        console.log(mainAcc);\n      });\n    };\n\n    if (loadingData) {\n      getData();\n    }\n  }, []);\n\n  const transactionList = page => {\n    var _mainAcc$accounts;\n\n    console.log(\"acc\");\n    console.log(mainAcc.accounts); // return <h1>hi</h1>\n\n    return (_mainAcc$accounts = mainAcc.accounts) === null || _mainAcc$accounts === void 0 ? void 0 : _mainAcc$accounts.forEach(currentAccount => {\n      return /*#__PURE__*/_jsxDEV(Transaction, {\n        account: currentAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 20\n      }, this); // console.log(\"?\");\n      // return <h1>hello</h1>;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: loadingData ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        data: mainAcc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TransactionPage, \"UWVeOz4pbge9pkoUJ2fVttNEcSQ=\");\n\n_c2 = TransactionPage;\nexport default TransactionPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Transaction\");\n$RefreshReg$(_c2, \"TransactionPage\");","map":{"version":3,"sources":["C:/Coding Stuff/ElectronicWebsite/elsite/src/components/transactionPage.js"],"names":["React","instance","useEffect","useState","Table","Transaction","account","name","subtype","balance","current","TransactionPage","page","setPage","mainAcc","setMainAcc","accounts","renderAccounts","post","access_token","then","res","console","log","data","err","getData","loadingData","transactionList","forEach","currentAccount"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,WAAW,GAAIC,OAAD,IAAa;AAC7B,sBACI;AAAA,4BACI;AAAA,gBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKD,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAKF,OAAO,CAACG,OAAR,CAAgBC;AAArB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CARD;;KAAML,W;;AAUN,MAAMM,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC;AAAEa,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAtC,CAF0B,CAG1B;;AAEA,QAAMC,cAAc,GAAG,YAAY;AAC/B,QAAI;AACA,YAAMhB,QAAQ,CACTiB,IADC,CACI,UADJ,EACgB;AACdC,QAAAA,YAAY,EAAE;AADA,OADhB,EAIDC,IAJC,CAIKC,GAAD,IAAS;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEAN,QAAAA,UAAU,CAAC;AAAEC,UAAAA,QAAQ,EAAEK,GAAG,CAACG,IAAJ,CAASR;AAArB,SAAD,CAAV,CAHW,CAIX;;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;AACH,OAXC,CAAN;AAYH,KAbD,CAaE,OAAOW,GAAP,EAAY;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH;AACJ,GAjBD,CAL0B,CAwB1B;AACA;AACA;AACA;;;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMwB,OAAO,GAAG,YAAY;AACxB,YAAMzB,QAAQ,CACTiB,IADC,CACI,UADJ,EACgB;AACdC,QAAAA,YAAY,EAAE;AADA,OADhB,EAIDC,IAJC,CAIKC,GAAD,IAAS;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEAN,QAAAA,UAAU,CAAC;AAAEC,UAAAA,QAAQ,EAAEK,GAAG,CAACG,IAAJ,CAASR;AAArB,SAAD,CAAV,CAHW,CAIX;;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;AACH,OAXC,CAAN;AAYH,KAbD;;AAcA,QAAIa,WAAJ,EAAiB;AACbD,MAAAA,OAAO;AACV;AACJ,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,QAAME,eAAe,GAAIhB,IAAD,IAAU;AAAA;;AAC9BU,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYT,OAAO,CAACE,QAApB,EAF8B,CAG9B;;AACA,gCAAOF,OAAO,CAACE,QAAf,sDAAO,kBAAkBa,OAAlB,CAA2BC,cAAD,IAAoB;AACjD,0BAAO,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,cAAP,CADiD,CAEjD;AACA;AACH,KAJM,CAAP;AAKH,GATD;;AAWA,sBACI;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA,2BACI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,gBACKH,WAAW,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAoB,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEb;AAAb;AAAA;AAAA;AAAA;AAAA;AADpC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA7ED;;GAAMH,e;;MAAAA,e;AA+EN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\r\nimport \"./transactionPage.css\";\r\nimport instance from \"./axios.js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Table from \"./Table\";\r\n\r\nconst Transaction = (account) => {\r\n    return (\r\n        <tr>\r\n            <td>{account.name}</td>\r\n            <td>{account.subtype}</td>\r\n            <td>{account.balance.current}</td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nconst TransactionPage = () => {\r\n    const [page, setPage] = useState(0);\r\n    const [mainAcc, setMainAcc] = useState({ accounts: [] });\r\n    // var mainAcc = {};\r\n\r\n    const renderAccounts = async () => {\r\n        try {\r\n            await instance\r\n                .post(\"/balance\", {\r\n                    access_token: \"access-sandbox-4acad0a3-4e55-4ecc-8a16-8114123c22c4\",\r\n                })\r\n                .then((res) => {\r\n                    console.log(res);\r\n\r\n                    setMainAcc({ accounts: res.data.accounts });\r\n                    // mainAcc = { accounts: res.data };\r\n                    console.log(\"acc2\");\r\n                    console.log(mainAcc);\r\n                });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     renderAccounts();\r\n    //     setPage(page + 1);\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            await instance\r\n                .post(\"/balance\", {\r\n                    access_token: \"access-sandbox-4acad0a3-4e55-4ecc-8a16-8114123c22c4\",\r\n                })\r\n                .then((res) => {\r\n                    console.log(res);\r\n\r\n                    setMainAcc({ accounts: res.data.accounts });\r\n                    // mainAcc = { accounts: res.data };\r\n                    console.log(\"acc2\");\r\n                    console.log(mainAcc);\r\n                });\r\n        };\r\n        if (loadingData) {\r\n            getData();\r\n        }\r\n    }, []);\r\n\r\n    const transactionList = (page) => {\r\n        console.log(\"acc\");\r\n        console.log(mainAcc.accounts);\r\n        // return <h1>hi</h1>\r\n        return mainAcc.accounts?.forEach((currentAccount) => {\r\n            return <Transaction account={currentAccount} />;\r\n            // console.log(\"?\");\r\n            // return <h1>hello</h1>;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div id=\"background\">\r\n            <div id=\"container\">\r\n                {loadingData ? <p>loading</p> : <Table data={mainAcc} />}\r\n                {/* <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Institution Name</th>\r\n                            <th>Account Type</th>\r\n                            <th>Balance</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{transactionList()}</tbody>\r\n                </table> */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TransactionPage;\r\n"]},"metadata":{},"sourceType":"module"}